environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\khura\\AppData\\Roaming', 'CHROME_CRASHPAD_PIPE_NAME': '\\\\.\\pipe\\crashpad_23820_UAFHCAIYEKCASMEO', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'LENOVO', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'EFC_19056': '1', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\khura', 'LOCALAPPDATA': 'C:\\Users\\khura\\AppData\\Local', 'LOGONSERVER': '\\\\LENOVO', 'NUMBER_OF_PROCESSORS': '8', 'ONEDRIVE': 'C:\\Users\\khura\\OneDrive', 'ONEDRIVECONSUMER': 'C:\\Users\\khura\\OneDrive', 'ORIGINAL_XDG_CURRENT_DESKTOP': 'undefined', 'OS': 'Windows_NT', 'PATH': 'C:\\Users\\khura\\Desktop\\Python Projects\\scripting\\temp\\env\\Scripts;C:\\Python311\\Scripts\\;C:\\Python311\\;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Cloudflare\\Cloudflare WARP\\;C:\\iverilog\\bin;C:\\Users\\khura\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\khura\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\khura\\AppData\\Roaming\\npm;C:\\Program Files (x86)\\MongoDB Atlas CLI\\;C:\\Users\\khura\\Downloads\\mongosh-1.10.1-win32-x64\\mongosh-1.10.1-win32-x64\\bin;;c:\\Users\\khura\\AppData\\Roaming\\Code\\User\\globalStorage\\github.copilot-chat\\debugCommand;c:\\Users\\khura\\.vscode\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 140 Stepping 1, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '8c01', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\Users\\khura\\OneDrive\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PUBLIC': 'C:\\Users\\Public', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'TEMP': 'C:\\Users\\khura\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\khura\\AppData\\Local\\Temp', 'USERDOMAIN': 'LENOVO', 'USERDOMAIN_ROAMINGPROFILE': 'LENOVO', 'USERNAME': 'khura', 'USERPROFILE': 'C:\\Users\\khura', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'VIRTUAL_ENV': 'C:\\Users\\khura\\Desktop\\Python Projects\\scripting\\temp\\env', 'VIRTUAL_ENV_PROMPT': 'env', 'WINDIR': 'C:\\WINDOWS', 'ZES_ENABLE_SYSMAN': '1', 'TERM_PROGRAM': 'vscode', 'TERM_PROGRAM_VERSION': '1.99.3', 'LANG': 'en_US.UTF-8', 'COLORTERM': 'truecolor', 'GIT_ASKPASS': 'c:\\Users\\khura\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh', 'VSCODE_GIT_ASKPASS_NODE': 'C:\\Users\\khura\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS': '', 'VSCODE_GIT_ASKPASS_MAIN': 'c:\\Users\\khura\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js', 'VSCODE_GIT_IPC_HANDLE': '\\\\.\\pipe\\vscode-git-b175cb11fc-sock', 'PYDEVD_DISABLE_FILE_VALIDATION': '1', 'VSCODE_DEBUGPY_ADAPTER_ENDPOINTS': 'c:\\Users\\khura\\.vscode\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\.noConfigDebugAdapterEndpoints\\endpoint-fb191ed4128559ae.txt', 'BUNDLED_DEBUGPY_PATH': 'c:\\Users\\khura\\.vscode\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\libs\\debugpy', 'VSCODE_INJECTION': '1', '_OLD_VIRTUAL_PATH': 'C:\\Python311\\Scripts\\;C:\\Python311\\;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Cloudflare\\Cloudflare WARP\\;C:\\iverilog\\bin;C:\\Users\\khura\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\khura\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\khura\\AppData\\Roaming\\npm;C:\\Program Files (x86)\\MongoDB Atlas CLI\\;C:\\Users\\khura\\Downloads\\mongosh-1.10.1-win32-x64\\mongosh-1.10.1-win32-x64\\bin;;c:\\Users\\khura\\AppData\\Roaming\\Code\\User\\globalStorage\\github.copilot-chat\\debugCommand;c:\\Users\\khura\\.vscode\\extensions\\ms-python.debugpy-2025.6.0-win32-x64\\bundled\\scripts\\noConfigScripts'})